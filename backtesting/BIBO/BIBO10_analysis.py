import pandas as pd
from io import StringIO

# Input data
data = '''Symbol,Total Trades,Win Rate (%)
A,4,25.0
AAPL,9,44.44
ABBV,5,40.0
ABNB,3,0.0
ABT,9,66.67
ACGL,10,80.0
ACN,2,50.0
ADBE,9,55.56
ADI,8,37.5
ADP,4,75.0
ADSK,9,33.33
AEE,6,50.0
AEP,3,33.33
AFL,15,66.67
AIG,17,70.59
AIZ,10,60.0
AJG,18,44.44
ALB,3,0.0
ALGN,5,80.0
ALL,7,71.43
ALLE,4,50.0
AMAT,10,60.0
AMCR,4,25.0
AMD,8,50.0
AME,5,40.0
AMGN,6,50.0
AMP,18,55.56
AMT,4,75.0
AMZN,12,66.67
ANET,15,60.0
ANSS,13,38.46
AON,8,50.0
AOS,11,63.64
APA,3,0.0
APD,6,50.0
APH,10,50.0
APO,13,46.15
APTV,3,0.0
ARE,8,75.0
ATO,14,50.0
AVB,14,64.29
AVGO,7,71.43
AVY,6,50.0
AWK,1,0.0
AXON,7,57.14
AXP,12,83.33
AZO,14,57.14
BA,5,40.0
BAC,10,70.0
BALL,10,20.0
BDX,5,20.0
BEN,5,20.0
BG,5,60.0
BIIB,3,0.0
BK,8,75.0
BKNG,16,31.25
BKR,8,62.5
BLDR,3,33.33
BLK,9,66.67
BMY,5,40.0
BR,23,39.13
BRO,10,60.0
BSX,24,66.67
BX,19,47.37
BXP,2,50.0
C,3,33.33
CAG,1,100.0
CAH,8,37.5
CARR,8,50.0
CAT,6,33.33
CB,13,38.46
CBOE,26,57.69
CBRE,8,37.5
CCI,5,0.0
CCL,7,42.86
CDNS,10,60.0
CDW,6,50.0
CEG,10,30.0
CF,13,53.85
CFG,13,84.62
CHD,12,41.67
CHRW,4,75.0
CHTR,4,75.0
CI,5,60.0
CINF,3,33.33
CL,6,16.67
CLX,2,50.0
CMCSA,9,44.44
CME,10,90.0
CMG,2,0.0
CMI,10,80.0
CMS,5,80.0
CNC,6,50.0
CNP,11,63.64
COF,9,66.67
COIN,7,14.29
COO,7,42.86
COP,4,50.0
COR,10,40.0
COST,13,61.54
CPAY,8,62.5
CPB,12,50.0
CPRT,11,36.36
CPT,11,72.73
CRL,2,100.0
CRM,4,0.0
CRWD,10,80.0
CSCO,13,46.15
CSGP,4,25.0
CTAS,9,77.78
CTRA,1,0.0
CTSH,11,45.45
CTVA,8,62.5
CVS,11,54.55
CVX,3,33.33
CZR,3,33.33
D,4,50.0
DAL,8,37.5
DASH,14,35.71
DAY,5,60.0
DD,8,75.0
DDOG,5,0.0
DE,5,100.0
DECK,9,33.33
DELL,8,62.5
DG,3,100.0
DGX,7,71.43
DHI,5,60.0
DHR,7,71.43
DIS,1,0.0
DLR,9,55.56
DLTR,1,0.0
DOC,11,36.36
DOV,9,77.78
DOW,2,50.0
DPZ,2,50.0
DRI,12,41.67
DTE,10,40.0
DUK,7,42.86
DVA,12,66.67
DVN,1,0.0
DXCM,9,66.67
EA,9,33.33
EBAY,12,58.33
ECL,6,66.67
ED,3,100.0
EFX,11,45.45
EG,10,30.0
EIX,10,40.0
EL,7,42.86
ELV,19,52.63
EMN,6,66.67
EMR,4,25.0
ENPH,2,50.0
EOG,8,37.5
EPAM,6,50.0
EQIX,14,35.71
EQR,23,69.57
EQT,2,0.0
ERIE,3,33.33
ES,4,0.0
ESS,21,42.86
ETN,13,61.54
ETR,5,40.0
EVRG,6,33.33
EW,9,33.33
EXC,2,50.0
EXE,9,44.44
EXPD,8,37.5
EXPE,3,33.33
EXR,4,50.0
FANG,7,57.14
FAST,9,55.56
FCX,7,14.29
FDS,8,50.0
FDX,8,50.0
FE,9,33.33
FFIV,3,66.67
FI,15,46.67
FICO,9,11.11
FIS,5,40.0
FITB,12,58.33
FOXA,2,50.0
FRT,16,25.0
FSLR,11,45.45
FTNT,13,76.92
FTV,17,17.65
GD,15,60.0
GDDY,5,40.0
GE,16,37.5
GEN,6,50.0
GEV,4,25.0
GILD,10,40.0
GIS,2,100.0
GL,11,45.45
GLW,7,42.86
GM,7,28.57
GNRC,9,66.67
GOOG,8,25.0
GOOGL,5,20.0
GPC,3,100.0
GPN,5,0.0
GRMN,23,56.52
GS,13,38.46
GWW,11,45.45
HAL,4,25.0
HAS,5,40.0
HBAN,8,75.0
HCA,10,60.0
HD,13,61.54
HIG,13,46.15
HII,1,100.0
HLT,19,52.63
HOLX,9,33.33
HON,5,20.0
HPE,9,55.56
HPQ,6,50.0
HSIC,10,30.0
HST,7,28.57
HSY,2,50.0
HUBB,9,33.33
HWM,14,35.71
IBM,8,25.0
ICE,16,62.5
IDXX,10,20.0
IEX,4,25.0
IFF,11,45.45
INCY,8,100.0
INTC,4,100.0
INTU,13,61.54
INVH,20,35.0
IP,16,56.25
IPG,6,50.0
IQV,6,83.33
IR,11,54.55
IRM,23,56.52
ISRG,10,10.0
IT,13,38.46
ITW,6,50.0
IVZ,8,50.0
J,2,50.0
JBHT,8,37.5
JBL,10,60.0
JCI,12,75.0
JKHY,10,20.0
JNJ,3,0.0
JPM,15,66.67
K,8,25.0
KDP,4,25.0
KEY,16,56.25
KEYS,10,20.0
KHC,1,100.0
KIM,10,70.0
KKR,15,53.33
KLAC,11,18.18
KMB,8,25.0
KMI,9,66.67
KMX,2,100.0
KO,13,53.85
KR,6,50.0
L,17,47.06
LDOS,4,75.0
LEN,7,42.86
LH,3,66.67
LHX,15,53.33
LII,19,42.11
LIN,16,43.75
LKQ,15,53.33
LLY,17,35.29
LMT,4,75.0
LNT,6,66.67
LOW,9,22.22
LRCX,8,25.0
LULU,11,54.55
LUV,2,50.0
LVS,6,33.33
LW,5,60.0
LYB,8,25.0
LYV,6,0.0
MA,10,70.0
MAA,9,44.44
MAR,16,62.5
MAS,5,40.0
MCD,19,31.58
MCHP,3,0.0
MCK,27,70.37
MCO,12,50.0
MDLZ,6,16.67
MDT,4,25.0
MET,11,45.45
META,13,38.46
MGM,8,75.0
MHK,3,66.67
MKC,4,0.0
MLM,7,14.29
MMC,20,30.0
MMM,3,0.0
MNST,4,25.0
MO,10,80.0
MOH,11,63.64
MOS,1,100.0
MPC,6,33.33
MPWR,8,50.0
MRK,10,60.0
MRNA,1,0.0
MS,11,72.73
MSCI,11,18.18
MSFT,9,77.78
MSI,16,56.25
MTB,9,77.78
MTCH,4,50.0
MTD,8,25.0
MU,7,14.29
NCLH,5,20.0
NDAQ,12,33.33
NDSN,6,33.33
NEE,4,50.0
NEM,5,100.0
NFLX,4,25.0
NI,14,57.14
NKE,2,100.0
NOC,5,0.0
NOW,16,43.75
NRG,15,60.0
NSC,3,0.0
NTAP,11,63.64
NTRS,13,69.23
NUE,6,50.0
NVDA,6,50.0
NVR,10,20.0
NWS,8,75.0
NWSA,8,62.5
NXPI,7,71.43
O,6,66.67
ODFL,10,40.0
OKE,17,35.29
OMC,19,63.16
ON,12,25.0
ORCL,11,63.64
ORLY,17,41.18
OTIS,15,33.33
OXY,5,0.0
PANW,8,50.0
PARA,2,0.0
PAYC,2,0.0
PAYX,12,66.67
PCAR,5,40.0
PCG,19,68.42
PEG,8,75.0
PEP,5,20.0
PFE,8,0.0
PFG,14,71.43
PG,17,70.59
PGR,10,80.0
PH,10,20.0
PHM,11,36.36
PKG,11,63.64
PLD,5,40.0
PLTR,8,75.0
PM,7,42.86
PNC,12,66.67
PNR,4,75.0
PNW,9,55.56
PODD,12,66.67
POOL,3,66.67
PPG,7,42.86
PPL,10,60.0
PRU,17,70.59
PSA,8,12.5
PSX,5,20.0
PTC,15,40.0
PWR,12,58.33
PYPL,8,62.5
QCOM,4,50.0
RCL,5,100.0
REG,17,41.18
REGN,16,56.25
RF,9,55.56
RJF,12,25.0
RL,3,33.33
RMD,13,38.46
ROK,4,25.0
ROL,14,64.29
ROP,26,50.0
ROST,3,0.0
RSG,17,47.06
RTX,9,44.44
RVTY,9,44.44
SBAC,6,0.0
SBUX,11,45.45
SCHW,8,37.5
SHW,4,50.0
SJM,1,0.0
SLB,5,40.0
SMCI,5,80.0
SNA,4,50.0
SNPS,9,55.56
SO,7,57.14
SOLV,6,50.0
SPG,13,38.46
SPGI,6,66.67
SRE,6,66.67
STE,19,31.58
STLD,8,62.5
STT,10,70.0
STX,9,55.56
STZ,2,0.0
SW,1,0.0
SWKS,3,33.33
SYF,13,30.77
SYK,7,42.86
SYY,7,42.86
T,22,36.36
TAP,4,50.0
TDG,6,50.0
TDY,12,25.0
TECH,7,71.43
TEL,11,45.45
TER,5,60.0
TFC,12,50.0
TJX,24,41.67
TKO,12,66.67
TMO,6,16.67
TMUS,10,30.0
TPL,9,55.56
TPR,1,100.0
TRGP,17,58.82
TRMB,6,50.0
TROW,6,66.67
TRV,6,50.0
TSCO,9,66.67
TSLA,10,60.0
TSN,5,40.0
TT,12,58.33
TTWO,2,50.0
TXN,19,26.32
TXT,15,46.67
TYL,15,66.67
UBER,6,66.67
UDR,14,42.86
UHS,4,50.0
ULTA,8,62.5
UNH,9,44.44
UNP,1,0.0
URI,13,46.15
V,8,12.5
VICI,4,25.0
VLO,4,50.0
VLTO,1,0.0
VMC,9,22.22
VRSK,12,83.33
VRSN,11,27.27
VRTX,10,50.0
VST,9,22.22
VTR,2,50.0
VTRS,2,0.0
VZ,9,33.33
WAB,13,53.85
WAT,12,75.0
WBD,2,50.0
WDAY,9,44.44
WDC,3,66.67
WEC,7,57.14
WELL,21,52.38
WFC,14,35.71
WM,15,46.67
WMB,21,52.38
WMT,5,40.0
WRB,6,50.0
WSM,4,75.0
WST,7,71.43
WTW,10,50.0
WY,1,100.0
WYNN,10,80.0
XEL,3,33.33
XOM,9,55.56
XYL,4,25.0
YUM,14,35.71
ZBH,6,66.67
ZBRA,13,46.15
ZTS,10,70.0
'''  # Truncated for example

# Convert to DataFrame
df = pd.read_csv(StringIO(data))

# Summary statistics
total_symbols = len(df)
symbols_over_33_win = df[df["Win Rate (%)"] > 33.0]
avg_trades_per_symbol = df["Total Trades"].mean()
symbols_with_more_than_8_trades_and_win_gt_33 = df[(df["Total Trades"] > 8) & (df["Win Rate (%)"] > 33.0)]

# Outputs
summary = {
    "Total Symbols": total_symbols,
    "Symbols with Win Rate > 33%": len(symbols_over_33_win),
    "Average Trades per Symbol": avg_trades_per_symbol,
    "Symbols with >8 Trades and Win Rate > 33%": len(symbols_with_more_than_8_trades_and_win_gt_33),
    "Full List (>8 trades and >33% win rate)": symbols_with_more_than_8_trades_and_win_gt_33.sort_values(by="Win Rate (%)", ascending=False)
}

print(summary)

# Filter stocks with > 5 trades and > 55% win rate
filtered_stocks = df[(df["Total Trades"] > 5) & (df["Win Rate (%)"] > 25.0)]

# Sort by win rate descending
filtered_stocks_sorted = filtered_stocks.sort_values(by="Win Rate (%)", ascending=False)

print(">5 trades, >55%winrate")
print(filtered_stocks_sorted)

highWin_stocks = filtered_stocks_sorted["Symbol"].tolist()
print(highWin_stocks)


